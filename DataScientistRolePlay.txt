By: Subhodeep Sinha
Dated: 9th October, 2020


Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

	SQL code used to arrive at answer:

	SELECT COUNT(*)
		FROM table_name;
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

	SQL code used to arrive at answer:

	SELECT COUNT(DISTINCT(key))
		FROM table;

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643	
iv. Attribute = 1115
v. Review = id = 10000, business_id = 8090, user_id = 9581, 
vi. Checkin = business_id = 493
vii. Photo = business_id = 6493, id = 10000
viii. Tip = user_id = , business_id = 3979
ix. User = 537
x. Friend = user_id= 11, friend_id=9415
xi. Elite_years = 2780																	

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:

	SELECT COUNT(*)
		FROM user
		WHERE id IS NULL OR 
		  name IS NULL OR 
		  review_count IS NULL OR 
		  yelping_since IS NULL OR
		  useful IS NULL OR 
		  funny IS NULL OR 
		  cool IS NULL OR 
		  fans IS NULL OR 
		  average_stars IS NULL OR 
		  compliment_hot IS NULL OR 
		  compliment_more IS NULL OR 
		  compliment_profile IS NULL OR 
		  compliment_cute IS NULL OR 
		  compliment_list IS NULL OR 
		  compliment_note IS NULL OR 
		  compliment_plain IS NULL OR 
		  compliment_cool IS NULL OR 
		  compliment_funny IS NULL OR 
		  compliment_writer IS NULL OR 
		  compliment_photos IS NULL 
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	SQL code used to arrive at answer:

	SELECT AVG(key), MIN(key), MAX(key)

		FROM table_name;

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0 		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

	SELECT city,
		SUM(review_count) AS reviews
		FROM business
		GROUP BY city
		ORDER BY reviews DESC
	
	
	Copy and Paste the Result Below:
			
	+-----------------+---------+
	| city            | reviews |
	+-----------------+---------+
	| Las Vegas       |   82854 |
	| Phoenix         |   34503 |
	| Toronto         |   24113 |
	| Scottsdale      |   20614 |
	| Charlotte       |   12523 |
	| Henderson       |   10871 |
	| Tempe           |   10504 |
	| Pittsburgh      |    9798 |
	| Montréal        |    9448 |
	| Chandler        |    8112 |
	| Mesa            |    6875 |
	| Gilbert         |    6380 |
	| Cleveland       |    5593 |
	| Madison         |    5265 |
	| Glendale        |    4406 |
	| Mississauga     |    3814 |
	| Edinburgh       |    2792 |
	| Peoria          |    2624 |
	| North Las Vegas |    2438 |
	| Markham         |    2352 |
	| Champaign       |    2029 |
	| Stuttgart       |    1849 |
	| Surprise        |    1520 |
	| Lakewood        |    1465 |
	| Goodyear        |    1155 |
	+-----------------+---------+
	(Output limit exceeded, 25 of 362 total rows shown)
 
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

	SELECT stars,
				   
		SUM(review_count) AS count
			
		FROM business
			
		WHERE city == 'Avon'
			
		GROUP BY stars;	


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
	+-------+-------+
	| stars | count |
	+-------+-------+
	|   1.5 |    10 |
	|   2.5 |     6 |
	|   3.5 |    88 |
	|   4.0 |    21 |
	|   4.5 |    31 |
	|   5.0 |     3 |
	+-------+-------+


ii. Beachwood

SQL code used to arrive at answer:
	
	SELECT stars,
				   
		SUM(review_count) AS count
			
		FROM business
			
		WHERE city == 'Beachwood'
			
		GROUP BY stars;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

	+-------+-------+
	| stars | count |
	+-------+-------+
	|   2.0 |     8 |
	|   2.5 |     3 |
	|   3.0 |    11 |
	|   3.5 |     6 |
	|   4.0 |    69 |
	|   4.5 |    17 |
	|   5.0 |    23 |
	+-------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

		SELECT id, review_count, name
 
		FROM user 
		
ORDER BY review_count DESC
		LIMIT 3;
			
	
		
	Copy and Paste the Result Below:
	
	+------------------------+--------------+--------+
	| id                     | review_count | name   |
	+------------------------+--------------+--------+
	| -G7Zkl1wIWBBmD0KRy_sCw |      2000 | Gerald |
	| -3s52C4zL_DHRK0ULG6qtg |         1629 | Sara   |
	| -8lbUNlXVSoXqaRRiHiSNg |           1339 | Yuri   |
	+------------------------+--------------+--------+	
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	Yes
	
	Basically to what I find is 

	- The user with fans < 100 tend to have review_count between 160 and 1330.
	- The user with fans > 100 tend to have review_count between 255 and 2000.
	- The user with highest fans 503 has review_count of 609.
	- The user with fans 253 has highest review_count of 2000.
	- Yelping has also some effect. 
	
	SQL code used to arrive at answer:

	SELECT id, review_count, name, fans, yelping_since

	FROM user
	
ORDER BY fans DESC;
	
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Yes 

	
	SQL code used to arrive at answer:

	1)  	SELECT COUNT(*)
		
FROM review
		
WHERE text LIKE "%love%"


	2)	SELECT COUNT(*)

		FROM review
		
WHERE text LIKE "%hate%"


	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT id, name, fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10
	
	
	Copy and Paste the Result Below:

	 	+------------------------+-----------+------+
		| id                     | name      | fans |
		+------------------------+-----------+------+
		| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
		| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
		| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
		| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
		| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
		| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
		| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
		| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
		| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
		| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
		+------------------------+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
   	No. In the city, Gilbert with category as Shopping, there is same distribution of hours for the group 2-3 and the group 4-5 doesn't exist.  

ii. Do the two groups you chose to analyze have a different number of reviews?
         	The review count is all same for 2-3 group and that is, 4.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	People from Gilbert seems to have poor shopping experience and the business service is also not active due to few customers. That can be a reasone for 2-3 group is more and no 4-5 	group.	

	SQL code used for analysis:

	
SELECT b.name, b.review_count, h.hours, postal_code,


	case
    
		WHEN h.hours LIKE '%MONDAY%' THEN 1
    
		WHEN h.hours LIKE '%TUESDAY%' THEN 2
    
		WHEN h.hours LIKE '%WEDNESDAY%' THEN 3
    
		WHEN h.hours LIKE '%THURSDAY%' THEN 4
    
		WHEN h.hours LIKE '%FRIDAY%' THEN 5
    
		WHEN h.hours LIKE '%SATURDAY%' THEN 6
    
		WHEN h.hours LIKE '%SUNDAY%' THEN 7

	end as ord,
  

	case
    
		WHEN b.stars BETWEEN 2 AND 3 THEN '2-3'
    
		WHEN b.stars BETWEEN 4 AND 5 THEN '4-5'

	end as star_rating


	FROM business b INNER JOIN hours h 
  
		ON b.id = h.business_id
    
			INNER JOIN category c 
      
				ON b.id = c.business_id
  

	WHERE (b.city == 'Tempe' AND c.category LIKE 'shopping')

  
		AND 
      (b.stars BETWEEN 2 AND 3 
  OR
       b.stars BETWEEN 4 AND 5)

	GROUP BY stars, ord

	ORDER BY ord, star_rating ASC;




		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:  Average review count is more in case of business that are open than the ones that are closed.
		Closed business Avg(review_count) = 23.1980263158
		Open business Avg(review_count) = 31.7570754717
         
         
ii. Difference 2: Business that are open were reviewed useful than the closed business.
		Closed business COUNT(useful) = 71
		Open business COUNT(useful) = 565
         
         
         
SQL code used for analysis:

	2)
	 i.	 SELECT avg(stars), avg(review_count)
		 
FROM business 
		
 WHERE is_open==1


	ii.	SELECT COUNT(r.useful), b.is_open

		    FROM business b 
			INNER JOIN review r ON b.id = r.business_id

		WHERE b.is_open==1


	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do: Parsing out keywords for sentiment analysis to predict business existence 
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
	To make the a business analyst know the existence of their business in near future it is important to know the response and feedback that they are getting on their services.
	For this, we, basically, need data which tells us whether it is useful or funny or cool. Data could be collected from columns such as user_id, review_count, rating, is_useful, is_funny, 	is_cool. Apart from this data like business name and the state it is located in can be helpful in locating the target place.
                           
                  
iii. Output of your finished dataset:

+---------------------------------------------------------------------------+-------+-------+--------------+--------+-------+------+------------------------+
| Business_name                                    	    		| state | stars | review_count | useful | funny | cool | Business_id            |
+---------------------------------------------------------------------------+-------+-------+--------------+--------+-------+------+------------------------+
| Delmonico Steakhouse                             	    		| NV    |   4.0 |         1389 |      1 |         1 |    	0 | --9e1ONYQuAa-CB_Rrw7Tw |
| Pio Pio                                        	    		| NC    |   4.0 |           299 |      0 |         0 |    	0 | --cZ6Hhc9F7VkKXxHMVZSQ |
| Matt's Big Breakfast                               	    		| AZ    |   4.0 |           700 |      1 |          0 |    	0 | -050d_XIor1NpCuWkbIVaQ |
| The Fry                                            	    		| ON    |   3.5 |            76 |      1 |          0 |    	0 | -0NrB58jqKqJfuUCDupcsw |
| Dubliner                                           	    		| AZ    |   3.5 |          112 |      2 |           2 |    	3 | -0tgMGl7D9B10YjSN2ujLA |
| Matt's Big Breakfast                              	    		| AZ    |   3.5 |          279 |      0 |           0 |    	0 | -1UMR00eXtwaeh59pEiDjA |
| Romados                                            	    		| QC   |   4.5 |          398 |      0 |            0 |    	0 | -1xuC540Nycht_iWFeJ-dw |
| U.S. Bank                                          	    		| AZ    |   4.0 |              8 |      0 |           0 |    	0 | -2TKoFglMQvSmHSNWf6S8Q |
| Alamo Rent A Car                                   	    		| AZ    |   4.0 |            18 |      0 |           0 |    	0 | -2uhc4spgMqJMy0YSxConA |
| Now and Zen Massage Therapy                     		| NV    |   5.0 |           32 |      0 |            0 |    	0 | -38Kck4mGlkBwd6OXayZRg |
| I'm Board! Games & Family Fun                   		| WI    |   5.0 |           19 |      1 |            0 |    	0 | -3QHAylnVB-vNmCg2Rf5aw |
| Michael Mina                                       	    		| NV    |   4.0 |         574 |      1 |            0 |    	0 | -3zffZUHoY8bQjGfPSoBKQ |
| Ed's Tavern                                          	    		| NC    |   3.5 |           95 |      0 |            0 |    	0 | -5L8zOxibac-vBrsYtxXbQ |
| Po' Boys Restaurant                                	    		| IL      |  4.0  |           54 |      1 |            0 |    	0 | -5NXoZeGBdx3Bdk70tuyCw |
| Torontoism - Sotheby's International Realty Canada 		| ON    |   5.0 |             7 |      2 |            0 |    	0 | -5TBEK1ddM41v_gqGm5oyw |
| Joyride Taco House                                 	   		| AZ    |   4.0 |          902 |      0 |            0 |    	0 | -6tvduBzjLI1ISfs3F_qTg |
| Industry Public House                              	   		| PA    |   3.5 |          436 |      0 |            0 |    	0 | -7H-oXvCxJzuT42ky6Db0g |
| Pizza Taglio                                      	   		| PA    |   4.0 |            93 |      0 |            0 |    	0 | -7PX_FOoCwktlunImRyZdg |
| Liberty Nails                                      	   		| AZ    |   3.0 |            29 |      0 |            0 |    	0 | -82Z0wTA-nOCLUVD4XXIBA |
| Blue Canyon                                        	   		| OH    |   3.5 |         148 |      5 |            1 |    	0 | -8O8sVCnaIKHP-596zN9UA |
| Nandini Indian Cuisine                             	   		| AZ    |   4.5 |          406 |      1 |            0 |    	1 | -8QlV3b_9H4BAh6LgMIr1g |
| The Butcher Block                                  	   		| NV    |   4.5 |          106 |      0 |           0 |    	0 | -8ZiMXZReeTD3kwEvS0Lww |
| Junior                                             	   		| QC    |   3.5 |            53 |      2 |           2 |    	0 | -92cC6-X87HQ1DE1UHOx3w |
| The Perfect Scoop & Boba Tea                     		| NV    |   3.5 |          564 |      2 |           1 |    	3 | -95mbLJsa0CxXhpaNL4LvA |
| Fresh Buffet                                       	   		| NV    |   2.5 |          160 |      0 |           0 |    	0 | -9YyInW1wapzdNZrhQJ9dg |
+----------------------------------------------------+-------+-------+--------------+--------+-------+------+------------------------+
(Output limit exceeded, 25 of 507 total rows shown)
	
         
         
iv. Provide the SQL code you used to create your final dataset:


		SELECT b.id AS Business_id, 
			b.name as Business_name, 
			b.state, 
			b.stars, 
			b.review_count, 
			r.useful, 
			r.funny, 
			r.cool

		FROM business b 
		INNER JOIN review r 
		ON b.id = r.business_id
		
GROUP BY b.id